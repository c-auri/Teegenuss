rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function getUserDetails() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }
    match /users/{user} {
      allow read: if true
      allow create: 
        if request.auth != null 
        && request.auth.uid == user
        && 'name' in request.resource.data
        && !exists(/databases/$(database)/documents/usernames/$(request.resource.data.name))
        && request.auth.uid == getAfter(
          /databases/$(database)/documents/usernames/$(request.resource.data.name)
        ).data.uid
    }
    match /usernames/{username} {
      allow read: if true
      allow create: 
        if request.auth != null
        && request.auth.uid == request.resource.data.uid
        && username.matches('^[a-zA-Z\u00C0-\u017F]+((_|:|([.-]?\s?))?[a-zA-Z0-9\u00C0-\u017F]+){2,}$')
        && username == getAfter(/databases/$(database)/documents/users/$(request.auth.uid)).data.name
    }
    match /bundles/{bundle} {
      allow read: if true
    }
    match /reviews/{review} {
      allow read: if true
      allow create: 
        if request.auth != null
        && request.resource.data.user.uid == request.auth.uid
        && request.resource.data.user.name == getUserDetails().name
        && request.resource.data.user.photoURL == getUserDetails().photoURL
        && request.auth.uid in get(/databases/$(database)/documents/bundles/$(request.resource.data.bundle)).data.buyers
        && review == request.resource.data.tea + '-' + request.resource.data.user.uid
    }
  }
}