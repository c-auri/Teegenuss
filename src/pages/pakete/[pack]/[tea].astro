---
import Page from '../../../layouts/Page.astro'
import Frame from '../../../components/page/Frame.astro'
import Subheading from '../../../components/page/Subheading.astro'
import Slideshow from '../../../components/tea/Slideshow.jsx'
import Purchase from '../../../components/tea/Purchase.astro'
import Origin from '../../../components/tea/Origin.astro'
import Preparation from '../../../components/tea/Preparation.astro'
import Accordion from '../../../components/tea/Accordion.jsx'

import  { getCollection, getEntry } from 'astro:content'
import { modulo } from '../../../scripts/modulo'

export async function getStaticPaths() {
    const teas = await getCollection('teas')
    const packs = await getCollection('packs')
    
    return teas.map(tea => {
        const pack = packs.find(p => p.id === tea.data.pack!.id)!
        return {
            params: { 
                pack: pack.data.route,
                tea: tea.data.route }, 
            props: { entry: tea }
        }})
}

const { entry } = Astro.props
const { Content } = await entry.render()

const images = [
    { src: `/images/teas/${entry.slug}/01.png` },
    { src: `/images/teas/${entry.slug}/02.png` },
    { src: `/images/teas/${entry.slug}/03.png` },
]

const tags = await getCollection('tags', tag => entry.data.tags.includes(tag.slug))
const pack = await getEntry('packs', entry.data.pack.id)
const teasInPack = await getCollection('teas', tea => tea.data.pack.id === entry.data.pack.id)
const entryIndex = teasInPack.findIndex(tea => tea.id === entry.id)
const previousTea = teasInPack[modulo(entryIndex - 1, teasInPack.length)]!
const nextTea = teasInPack[modulo(entryIndex + 1, teasInPack.length)]!
---
<Page title={entry.data.title}>
    <Frame>
        <section class="w-full mt-8 mb-24 text-xl grid justify-items-center lg:grid-cols-2 lg:gap-x-20 lg:gap-y-2 xl:grid-rows-[11rem]">
            <div class="tracking-wider text-gray-500 grid place-items-center lg:col-start-2 lg:justify-self-stretch lg:self-end lg:place-items-start lg:gap-2">
                <a class="select-none hover:text-gray-800 lg:row-start-1" href="./">{pack.data.title}</a>
                <h1 class="cursor-default mt-1 mb-2 text-3xl text-center font-bold text-black sm:text-4xl lg:my-0 lg:row-start-2 lg:col-span-2 lg:text-left lg:text-5xl xl:text-6xl">{entry.data.title}</h1>
                <div class="select-none flex gap-3 lg:row-start-1 lg:justify-self-end lg:gap-5">
                    <a class="hover:text-gray-800" href={`/pakete/${pack.data.route}/${previousTea.data.route}`}>&#8249; zur√ºck</a>
                    <a class="hover:text-gray-800" href={`/pakete/${pack.data.route}/${nextTea.data.route}`}>weiter &#8250;</a>
                </div>
            </div>
            <div class="w-full mt-3 mb-10 lg:col-start-1 lg:row-start-1 lg:row-span-2">
                <Slideshow client:load images={images} />
            </div>
            <div class="max-w-2xl flex flex-col items-center lg:col-start-2 lg:justify-self-start lg:mt-3 lg:items-start">
                <div class="cursor-default self-stretch flex justify-between tracking-wider text-gray-500">
                    <Purchase data={entry.data} />
                </div>
                <div class="my-5 xl:text-2xl">
                    <Content />
                </div>
            </div>
        </section>
    </Frame>
    <Frame bg="bg-gray-100">
        <section class="pt-16 pb-24 text-gray-700 fill-gray-700 lg:pt-24 lg:pb-32">
            <Subheading classList="mb-10 text-center lg:text-left">Zubereitung</Subheading>
            <Preparation preparation={entry.data.preparation} color="fill-gray-500" />
        </section>
    </Frame>
    <Frame bg="bg-white">
        <section class="py-24 grid gap-14 lg:grid-cols-5">
            <Subheading classList="text-start sm:text-start lg:row-start-1 lg:col-start-1 lg:col-end-6">Details</Subheading>
            <Origin origin={entry.data.origin} classList="w-full max-w-2xl lg:col-span-2 lg:row-start-2 lg:col-start-4 lg:col-end-6 lg:self-start" />
            <div class="w-full lg:max-w-2xl lg:row-start-2 lg:col-start-1 lg:col-end-4 flex flex-col items-center lg:items-start gap-5 xl:max-w-3xl">
                <Accordion client:load entries={tags} />
            </div>
        </section>
    </Frame>
</Page>